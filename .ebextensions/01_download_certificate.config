files:
  "/opt/elasticbeanstalk/hooks/prebuild/01_download_certificate.sh":
    mode: "000755"
    owner: webapp
    group: webapp
    content: |
      #!/bin/bash
      set -e
      
      echo "Starting certificate download script..."
      
      # Create directory if it doesn't exist
      mkdir -p /var/app/staging/src/main/resources
      echo "Created directory: /var/app/staging/src/main/resources"
      
      # Function to download certificate
      download_certificate() {
        echo "Attempting to download certificate from SSM..."
        aws ssm get-parameter \
          --name "/cassandra/AmazonRootCA1.pem" \
          --with-decryption \
          --region eu-north-1 \
          --query "Parameter.Value" \
          --output text > /var/app/staging/src/main/resources/AmazonRootCA1.pem
        
        if [ $? -eq 0 ]; then
          echo "Certificate downloaded successfully"
          return 0
        else
          echo "Failed to download certificate"
          return 1
        fi
      }
      
      # Try to download certificate with retries
      max_retries=5
      retry_count=0
      while [ $retry_count -lt $max_retries ]; do
        if download_certificate; then
          # Verify the certificate was downloaded and has content
          if [ -s /var/app/staging/src/main/resources/AmazonRootCA1.pem ]; then
            echo "Certificate file exists and has content"
            # Verify certificate format
            if grep -q "BEGIN CERTIFICATE" /var/app/staging/src/main/resources/AmazonRootCA1.pem && \
               grep -q "END CERTIFICATE" /var/app/staging/src/main/resources/AmazonRootCA1.pem; then
              echo "Certificate format is valid"
              break
            else
              echo "Certificate format is invalid"
            fi
          else
            echo "Certificate file is empty"
          fi
        fi
        retry_count=$((retry_count + 1))
        if [ $retry_count -lt $max_retries ]; then
          echo "Retry $retry_count of $max_retries..."
          sleep 5
        fi
      done
      
      # Final verification
      if [ ! -s /var/app/staging/src/main/resources/AmazonRootCA1.pem ]; then
        echo "Failed to download certificate after $max_retries attempts"
        exit 1
      fi
      
      # Set proper permissions
      chown webapp:webapp /var/app/staging/src/main/resources/AmazonRootCA1.pem
      chmod 600 /var/app/staging/src/main/resources/AmazonRootCA1.pem
      echo "Set permissions on certificate file"
      
      # Create a flag file to indicate certificate is ready
      touch /var/app/staging/src/main/resources/.certificate_ready
      chown webapp:webapp /var/app/staging/src/main/resources/.certificate_ready
      chmod 644 /var/app/staging/src/main/resources/.certificate_ready
      echo "Created certificate ready flag file"
      
      echo "Certificate download script completed successfully"

commands:
  01_verify_certificate:
    command: |
      if [ ! -f /var/app/staging/src/main/resources/AmazonRootCA1.pem ] || [ ! -s /var/app/staging/src/main/resources/AmazonRootCA1.pem ]; then
        echo "Certificate not found or empty after deployment"
        exit 1
      fi
      echo "Certificate verification passed"
    ignoreErrors: false

  02_verify_script_execution:
    command: |
      echo "Verifying certificate download script execution..."
      if [ -f /opt/elasticbeanstalk/hooks/prebuild/01_download_certificate.sh ]; then
        echo "Script exists"
        ls -l /opt/elasticbeanstalk/hooks/prebuild/01_download_certificate.sh
      else
        echo "Script does not exist"
        exit 1
      fi
    ignoreErrors: false

  03_verify_aws_cli:
    command: |
      echo "Verifying AWS CLI installation..."
      aws --version
      echo "Verifying AWS CLI permissions..."
      aws sts get-caller-identity
    ignoreErrors: false

post_deploy:
  files:
    "/var/app/current/src/main/resources/AmazonRootCA1.pem":
      mode: "000644"
      owner: webapp
      group: webapp
      content: |
        $(cat /var/app/staging/src/main/resources/AmazonRootCA1.pem)
    "/var/app/current/src/main/resources/.certificate_ready":
      mode: "000644"
      owner: webapp
      group: webapp
      content: |
        $(cat /var/app/staging/src/main/resources/.certificate_ready) 